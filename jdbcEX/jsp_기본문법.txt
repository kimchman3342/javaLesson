<<JSP와 관련된 문법 요소>>
요청된 jsp 파일은 웹컨테이너(was 서버)가 
.java 자바소스파일로 변경 -> 컴파일 -> .class 을 was 서버가 저장해 놓음.
->  웹컨테이너(was 서버) -> html 로 변경
-> 사용자 브라우저에게 전달

1. JSP 기본문법
1) 스크립트릿 : <%    %>
		-> 자바 코드 작성
2) 표현식 : <%=   %>   *자바스크립트 표현식기호 ${} 를 jsp 에서는 el 이라고 부릅니다.
		-> 태그 요소에 출력내용(자바변수,수식,메소드...) 작성
3) 지시자 : <%@    %>  jsp 설정 관련
	ㄴ page 지시자 <%@ page    %>: 언어설정, import 등 jsp파일에서는 필수적인 지시자 		
	ㄴ include 지시자 : file="파일명" . file속성으로 지정된 소스코드를 포함시킴  
	ㄴ taglib 지시자 : 외부 라이브러리 사용하기
4) 선언부 : <%!    %>  변수와 메소드 선언
	변수는 스크립트릿 안에서 선언하고 쓰는 것이 일반적이고
	앞으로 html 태그들과 자바코드를 분리할 것이므로 거의 사용되지 않습니다.

2. 내장 객체 - 미리 만들어진 객체. jsp 라이브러리에서 제공되는 객체. 선언하지 않고 바로 사용.
1) out : html 문서에 출력하기 위한 객체. 태그 요소 출력도 가능합니다.
2) request : 요청. 사용자가 보낸 요청에 대한 정보를 저장하는 객체. (매우 중요 ★★★★★)
   서블릿( 확장자 .java) : 자바 언어로 요청을 처리합니다. 
			jsp파일이 서블릿(.java)로 변경되어 html 파일 생성합니다.
   JSP(확장자 .jsp) : JSP 파일 안에 html, 자바 코드 가 작성됩니다.

3. request 의 파라미터 사용
처리 해야할 사용자 데이터는 request (요청)로 보냅니다. 
보내는 방법은 두가지가 있습니다.
	1) url 의 쿼리스트링 (조회)
		a 태그 href 속성값으로 정하기. 
		자바스크립트의 location.href = '요청url과 쿼리스트링' 
	2) form 태그 사용 (저장)

요청으로 전달받은 데이터(파라미터)를 서버에서 받을때는 request 객체를 사용합니다.메소드는 getParameter()

4. JSTL - Java(S)erver(P)age Standard Tag Library 
        ㄴ apache tomcat 웹사이트에서 jar 파일 다운로드 -> 라이브러리 추가하기

1) core 태그 : 값 저장과 출력, 실행 제어
2) fmt 태그 : format . 출력 포맷 설정하기
            (숫자,날짜 출력형식 / Locale 설정)
3) fn : 함수.문자열 메소드를 함수형태로 사용하기 
       (자바의 문자열 메소드와 상당부분 일치)

5. EL : ※※※${} 은 getAttribute로 값을 가져와서 출력한다.※※※
	애트리뷰트는 4개의 scope 저장소에 보관되는 데이터입니다.
		ㄴ 하나의 웹페이지 범위 안에서 사용할 수 있는 저장소는 pageScope 입니다.
				☞ 내장 객체 이름은 pageContext
		ㄴ 하나의 요청 범위 안에서 사용할 수 있는 저장소는 requestScope 입니다.
				☞ 내장 객체 이름은 request
		
        객체의 프로퍼티는 getter 메소드 직접 작성없이 바로 가져온다.
        getAttribute 메소드의 리턴타입은 Object 이고 ${} 은 타입변환도 합니다


6. ip관련 설정사항입니다.
 java 에서 처리 할때 ipv6 로 출력되는 것을 ipv4 로 표시되게 설정을 바꿉시다. 
 	ㄴ Run - Run Configurations
 	  톰캣의 arguments 항목에 -Djava.net.preferIPv4Stack=true 추가하기